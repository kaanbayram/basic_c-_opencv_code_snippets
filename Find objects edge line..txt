#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/highgui/highgui.hpp"
#include <stdlib.h>
#include <stdio.h>
#include <iostream>
using namespace cv;
using namespace std;



Mat src, src_gray;
Mat dst, detected_edges;

int edgeThresh = 1;
int lowThreshold;
int const max_lowThreshold = 100;
int ratio = 3;
int kernel_size = 3;
//char* window_name = "Edge Map";



void CannyThreshold(int, void*)
{

	blur(src_gray, detected_edges, Size(3, 3));


	Canny(detected_edges, detected_edges, lowThreshold, lowThreshold*ratio, kernel_size);


	dst = Scalar::all(0);

	src.copyTo(dst, detected_edges);
	imshow("pencere", dst);
}



int main(int argc, char** argv)
{


	
	VideoCapture video(0);
	

	if (!video.isOpened())
	{

		return -1;
	}
	
	while (true)
	{
		video.read(src);

		dst.create(src.size(), src.type());


		cvtColor(src, src_gray, CV_BGR2GRAY);


		namedWindow("pencere", CV_WINDOW_AUTOSIZE);


		createTrackbar("Min Threshold:", "pencere", &lowThreshold, max_lowThreshold, CannyThreshold);


		CannyThreshold(0, 0);
	
		if (waitKey(30) == 27)
		{
			cout << "cikis yaptiniz" << endl;
			break;
		}

	}

	

	return 0;
}